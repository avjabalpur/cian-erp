import { parseAsString, parseAsInteger, parseAsBoolean, parseAsDecimal } from 'nuqs/server';
import { ItemMasterFilter } from '@/types/item-master';

export interface SelectOption {
  value: string;
  label: string;
  variant?: "default" | "secondary" | "destructive" | "outline";
  disabled?: boolean;
  shortName?: string;
}

// Status Options
export const statusOptions: SelectOption[] = [
  { label: "All Statuses", value: "" },
  { label: "Active", value: "true" },
  { label: "Inactive", value: "false" },
];

// Sort Options
export const sortOptions: SelectOption[] = [
  { value: "created_at", label: "Created Date" },
  { value: "updated_at", label: "Updated Date" },
  { value: "code", label: "Code" },
  { value: "name", label: "Name" },
  { value: "description", label: "Description" },
];

// Sort Order Options
export const sortOrderOptions: SelectOption[] = [
  { value: "desc", label: "Descending" },
  { value: "asc", label: "Ascending" }
];

// Page Size Options
export const pageSizeOptions: SelectOption[] = [
  { label: "10 per page", value: "10" },
  { label: "25 per page", value: "25" },
  { label: "50 per page", value: "50" },
  { label: "100 per page", value: "100" },
];

// nuqs Parsers
export const itemTypeParsers = {
  page: parseAsInteger.withDefault(1),
  pageSize: parseAsInteger.withDefault(10),
  sortBy: parseAsString.withDefault("created_at"),
  sortOrder: parseAsString.withDefault("desc") as any,
  searchTerm: parseAsString.withDefault(""),
  isActive: parseAsBoolean,
};

// Filter Default Values
export const defaultItemTypeFilter = {
  page: 1,
  pageSize: 10,
  sortBy: "created_at",
  sortOrder: "desc" as "asc" | "desc",
  searchTerm: "",
  isActive: undefined as boolean | undefined,
};

export const itemMasterFilterParsers = {
  searchTerm: parseAsString.withDefault(''),
  itemCode: parseAsString.withDefault(''),
  itemName: parseAsString.withDefault(''),
  shortName: parseAsString.withDefault(''),
  revNo: parseAsString.withDefault(''),
  itemTypeId: parseAsInteger.withDefault(null),
  subType: parseAsString.withDefault(''),
  gsInd: parseAsString.withDefault(''),
  goodsType: parseAsString.withDefault(''),
  pharmacopoeiaName: parseAsString.withDefault(''),
  unitOfMeasure: parseAsString.withDefault(''),
  issuingUnit: parseAsString.withDefault(''),
  drawingRef: parseAsString.withDefault(''),
  stdAssayStrength: parseAsString.withDefault(''),
  productType: parseAsString.withDefault(''),
  salesDivision: parseAsString.withDefault(''),
  productGroup: parseAsString.withDefault(''),
  vendorPartNo: parseAsString.withDefault(''),
  allergen: parseAsString.withDefault(''),
  activeIngredient: parseAsString.withDefault(''),
  packingFreightInsuranceServices: parseAsString.withDefault(''),
  boughtOut: parseAsBoolean.withDefault(null),
  jobWork: parseAsBoolean.withDefault(null),
  imported: parseAsBoolean.withDefault(null),
  taxCreditApplicable: parseAsBoolean.withDefault(null),
  manufactured: parseAsBoolean.withDefault(null),
  sold: parseAsBoolean.withDefault(null),
  keyProduct: parseAsBoolean.withDefault(null),
  exported: parseAsBoolean.withDefault(null),
  batchNotApplicable: parseAsBoolean.withDefault(null),
  qcRequired: parseAsBoolean.withDefault(null),
  mfgDateApplicable: parseAsBoolean.withDefault(null),
  expiryDateApplicable: parseAsBoolean.withDefault(null),
  trackSerialNos: parseAsBoolean.withDefault(null),
  mfgLocNameRequired: parseAsBoolean.withDefault(null),
  mfgMmYyyyApplicable: parseAsBoolean.withDefault(null),
  expiryMmYyyyApplicable: parseAsBoolean.withDefault(null),
  principalForStatutoryReporting: parseAsBoolean.withDefault(null),
  minUomIssConvFactor: parseAsDecimal.withDefault(null),
  maxUomIssConvFactor: parseAsDecimal.withDefault(null),
  minUomUqcConvFactor: parseAsDecimal.withDefault(null),
  maxUomUqcConvFactor: parseAsDecimal.withDefault(null),
  minShelfLifeMonths: parseAsInteger.withDefault(null),
  maxShelfLifeMonths: parseAsInteger.withDefault(null),
  minShelfLifeDays: parseAsInteger.withDefault(null),
  maxShelfLifeDays: parseAsInteger.withDefault(null),
  minStdRate: parseAsDecimal.withDefault(null),
  maxStdRate: parseAsDecimal.withDefault(null),
  minLeadTimeDays: parseAsInteger.withDefault(null),
  maxLeadTimeDays: parseAsInteger.withDefault(null),
  minStdLossOnDry: parseAsDecimal.withDefault(null),
  maxStdLossOnDry: parseAsDecimal.withDefault(null),
  minSafetyStock: parseAsDecimal.withDefault(null),
  maxSafetyStock: parseAsDecimal.withDefault(null),
  minEconomicOrderQty: parseAsDecimal.withDefault(null),
  maxEconomicOrderQty: parseAsDecimal.withDefault(null),
  minDesiredPackSize: parseAsDecimal.withDefault(null),
  maxDesiredPackSize: parseAsDecimal.withDefault(null),
  minAllowedAllergenPercent: parseAsDecimal.withDefault(null),
  maxAllowedAllergenPercent: parseAsDecimal.withDefault(null),
  minStdMfgFeesPerUnit: parseAsDecimal.withDefault(null),
  maxStdMfgFeesPerUnit: parseAsDecimal.withDefault(null),
  minConversionFactor: parseAsDecimal.withDefault(null),
  maxConversionFactor: parseAsDecimal.withDefault(null),
  createdFrom: parseAsString.withDefault(''),
  createdTo: parseAsString.withDefault(''),
  updatedFrom: parseAsString.withDefault(''),
  updatedTo: parseAsString.withDefault(''),
  sortBy: parseAsString.withDefault('itemName'),
  sortDescending: parseAsBoolean.withDefault(false),
  pageNumber: parseAsInteger.withDefault(1),
  pageSize: parseAsInteger.withDefault(20),
  currentBuyer: parseAsString.withDefault(''),
  mainProdCentre: parseAsString.withDefault(''),
  freightOn: parseAsString.withDefault(''),
};

export const clearItemMasterFilters = () => {
  return {
    searchTerm: '',
    itemCode: '',
    itemName: '',
    shortName: '',
    revNo: '',
    itemTypeId: null,
    subType: '',
    gsInd: '',
    goodsType: '',
    pharmacopoeiaName: '',
    unitOfMeasure: '',
    issuingUnit: '',
    drawingRef: '',
    stdAssayStrength: '',
    productType: '',
    salesDivision: '',
    productGroup: '',
    vendorPartNo: '',
    allergen: '',
    activeIngredient: '',
    packingFreightInsuranceServices: '',
    boughtOut: null,
    jobWork: null,
    imported: null,
    taxCreditApplicable: null,
    manufactured: null,
    sold: null,
    keyProduct: null,
    exported: null,
    batchNotApplicable: null,
    qcRequired: null,
    mfgDateApplicable: null,
    expiryDateApplicable: null,
    trackSerialNos: null,
    mfgLocNameRequired: null,
    mfgMmYyyyApplicable: null,
    expiryMmYyyyApplicable: null,
    principalForStatutoryReporting: null,
    minUomIssConvFactor: null,
    maxUomIssConvFactor: null,
    minUomUqcConvFactor: null,
    maxUomUqcConvFactor: null,
    minShelfLifeMonths: null,
    maxShelfLifeMonths: null,
    minShelfLifeDays: null,
    maxShelfLifeDays: null,
    minStdRate: null,
    maxStdRate: null,
    minLeadTimeDays: null,
    maxLeadTimeDays: null,
    minStdLossOnDry: null,
    maxStdLossOnDry: null,
    minSafetyStock: null,
    maxSafetyStock: null,
    minEconomicOrderQty: null,
    maxEconomicOrderQty: null,
    minDesiredPackSize: null,
    maxDesiredPackSize: null,
    minAllowedAllergenPercent: null,
    maxAllowedAllergenPercent: null,
    minStdMfgFeesPerUnit: null,
    maxStdMfgFeesPerUnit: null,
    minConversionFactor: null,
    maxConversionFactor: null,
    createdFrom: '',
    createdTo: '',
    updatedFrom: '',
    updatedTo: '',
    sortBy: 'itemName',
    sortDescending: false,
    pageNumber: 1,
    pageSize: 20,
    currentBuyer: '',
    mainProdCentre: '',
    freightOn: '',
  };
};

export const buildItemMasterFilter = (params: any): ItemMasterFilter => {
  return {
    searchTerm: params.searchTerm || undefined,
    itemCode: params.itemCode || undefined,
    itemName: params.itemName || undefined,
    shortName: params.shortName || undefined,
    revNo: params.revNo || undefined,
    itemTypeId: params.itemTypeId || undefined,
    subType: params.subType || undefined,
    gsInd: params.gsInd || undefined,
    goodsType: params.goodsType || undefined,
    pharmacopoeiaName: params.pharmacopoeiaName || undefined,
    unitOfMeasure: params.unitOfMeasure || undefined,
    issuingUnit: params.issuingUnit || undefined,
    drawingRef: params.drawingRef || undefined,
    stdAssayStrength: params.stdAssayStrength || undefined,
    productType: params.productType || undefined,
    salesDivision: params.salesDivision || undefined,
    productGroup: params.productGroup || undefined,
    vendorPartNo: params.vendorPartNo || undefined,
    allergen: params.allergen || undefined,
    activeIngredient: params.activeIngredient || undefined,
    packingFreightInsuranceServices: params.packingFreightInsuranceServices || undefined,
    boughtOut: params.boughtOut || undefined,
    jobWork: params.jobWork || undefined,
    imported: params.imported || undefined,
    taxCreditApplicable: params.taxCreditApplicable || undefined,
    manufactured: params.manufactured || undefined,
    sold: params.sold || undefined,
    keyProduct: params.keyProduct || undefined,
    exported: params.exported || undefined,
    batchNotApplicable: params.batchNotApplicable || undefined,
    qcRequired: params.qcRequired || undefined,
    mfgDateApplicable: params.mfgDateApplicable || undefined,
    expiryDateApplicable: params.expiryDateApplicable || undefined,
    trackSerialNos: params.trackSerialNos || undefined,
    mfgLocNameRequired: params.mfgLocNameRequired || undefined,
    mfgMmYyyyApplicable: params.mfgMmYyyyApplicable || undefined,
    expiryMmYyyyApplicable: params.expiryMmYyyyApplicable || undefined,
    principalForStatutoryReporting: params.principalForStatutoryReporting || undefined,
    minUomIssConvFactor: params.minUomIssConvFactor || undefined,
    maxUomIssConvFactor: params.maxUomIssConvFactor || undefined,
    minUomUqcConvFactor: params.minUomUqcConvFactor || undefined,
    maxUomUqcConvFactor: params.maxUomUqcConvFactor || undefined,
    minShelfLifeMonths: params.minShelfLifeMonths || undefined,
    maxShelfLifeMonths: params.maxShelfLifeMonths || undefined,
    minShelfLifeDays: params.minShelfLifeDays || undefined,
    maxShelfLifeDays: params.maxShelfLifeDays || undefined,
    minStdRate: params.minStdRate || undefined,
    maxStdRate: params.maxStdRate || undefined,
    minLeadTimeDays: params.minLeadTimeDays || undefined,
    maxLeadTimeDays: params.maxLeadTimeDays || undefined,
    minStdLossOnDry: params.minStdLossOnDry || undefined,
    maxStdLossOnDry: params.maxStdLossOnDry || undefined,
    minSafetyStock: params.minSafetyStock || undefined,
    maxSafetyStock: params.maxSafetyStock || undefined,
    minEconomicOrderQty: params.minEconomicOrderQty || undefined,
    maxEconomicOrderQty: params.maxEconomicOrderQty || undefined,
    minDesiredPackSize: params.minDesiredPackSize || undefined,
    maxDesiredPackSize: params.maxDesiredPackSize || undefined,
    minAllowedAllergenPercent: params.minAllowedAllergenPercent || undefined,
    maxAllowedAllergenPercent: params.maxAllowedAllergenPercent || undefined,
    minStdMfgFeesPerUnit: params.minStdMfgFeesPerUnit || undefined,
    maxStdMfgFeesPerUnit: params.maxStdMfgFeesPerUnit || undefined,
    minConversionFactor: params.minConversionFactor || undefined,
    maxConversionFactor: params.maxConversionFactor || undefined,
    createdFrom: params.createdFrom || undefined,
    createdTo: params.createdTo || undefined,
    updatedFrom: params.updatedFrom || undefined,
    updatedTo: params.updatedTo || undefined,
    sortBy: params.sortBy || 'itemName',
    sortDescending: params.sortDescending || false,
    pageNumber: params.pageNumber || 1,
    pageSize: params.pageSize || 20,
    currentBuyer: params.currentBuyer || undefined,
    mainProdCentre: params.mainProdCentre || undefined,
    freightOn: params.freightOn || undefined,
  };
}; 